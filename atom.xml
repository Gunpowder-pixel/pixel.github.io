<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Gunpowder-pixel.github.io</id>
    <title>太空排骨</title>
    <updated>2021-03-08T17:19:58.111Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Gunpowder-pixel.github.io"/>
    <link rel="self" href="https://Gunpowder-pixel.github.io/atom.xml"/>
    <subtitle>&lt;b&gt;世事一场大梦，人生几度秋凉&lt;/b&gt;</subtitle>
    <logo>https://Gunpowder-pixel.github.io/images/avatar.png</logo>
    <icon>https://Gunpowder-pixel.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 太空排骨</rights>
    <entry>
        <title type="html"><![CDATA[简单的习惯]]></title>
        <id>https://Gunpowder-pixel.github.io/post/llmf6NXVt/</id>
        <link href="https://Gunpowder-pixel.github.io/post/llmf6NXVt/">
        </link>
        <updated>2020-06-16T10:40:09.000Z</updated>
        <content type="html"><![CDATA[<hr>
<p>谢谢⇒谢谢你<br>
随便⇒听你的<br>
我不会⇒我可以学<br>
听明白了吗⇒我说明白了吗</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux修改默认SSH端口与设置密钥登陆]]></title>
        <id>https://Gunpowder-pixel.github.io/post/XKQgG8Go2/</id>
        <link href="https://Gunpowder-pixel.github.io/post/XKQgG8Go2/">
        </link>
        <updated>2020-05-07T06:17:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="修改默认端口">修改默认端口</h2>
<h3 id="添加ssh端口">添加SSH端口</h3>
<pre><code>vi /etc/ssh/sshd_config
# vi打开文件后，按 I键 进入编辑模式，然后按下面的要求添加端口配置，最后按 ESC键 退出编辑模式并输入 :wq 保存并退出vi编辑器。
</code></pre>
<p>我们在默认的SSH端口配置下面添加一个我们要用的新的端口，例如 <strong>23456</strong></p>
<pre><code>Port 22
# 默认的22端口配置，注意现在不删除这个默认的 22端口配置，避免修改后无法链接SSH
Port 23456
# 新添加的 23456端口配置
</code></pre>
<p>然后我们重启SSH。</p>
<pre><code>/etc/init.d/ssh restart
# 如果提示服务不存在，那就用 /etc/init.d/sshd restart
# CentOS7 则用 systemctl restart sshd.service
</code></pre>
<h3 id="测试一下">测试一下</h3>
<p>用新端口连接测试，成功连接就可以取消默认的22端口</p>
<h3 id="取消默认ssh端口-22">取消默认SSH端口 22</h3>
<pre><code>vi /etc/ssh/sshd_config
</code></pre>
<p>我们再打开SSH配置文件，删除<code>Port 22</code>这一行，然后重启SSH即可。</p>
<pre><code>/etc/init.d/ssh restart
# 如果提示服务不存在，那就用 /etc/init.d/sshd restart
# CentOS7 则用 systemctl restart sshd.service
</code></pre>
<hr>
<h2 id="使用密钥登陆">使用密钥登陆</h2>
<p>有公钥（authorized_keys）可以直接上传到服务器的<code>/root/.ssh</code>目录内</p>
<p>没有<code>.ssh</code>目录的话就在/root目录下新建一个</p>
<pre><code>mkdir /root/.ssh
</code></pre>
<h3 id="配置公钥">配置公钥</h3>
<pre><code>cd .ssh
# 进入 .ssh 目录

ls -a
# . .. id_rsa id_rsa.pub
# 查看当前文件夹(/root/.ssh/)下的公匙(id_rsa.pub)和私匙(id_rsa)

mv id_rsa.pub authorized_keys
# 重命名公匙(id_rsa.pub)

ls -a
# . .. authorized_keys id_rsa
# 再查看一次当前文件夹(/root/.ssh/)下的公匙是否重命名成功

chmod 600 authorized_keys
chmod 700 ~/.ssh
# 然后修改密匙文件的权限，避免被其他用户 修改/删除。
# chmod 600 - 只有属主有读写权限。
# chmod 700 - 只有属主有读、写、执行权限。
</code></pre>
<h3 id="配置ssh">配置SSH</h3>
<p>开启 Key密匙登陆选项（一般默认都是开启的，确认一下）</p>
<pre><code>vi /etc/ssh/sshd_config
</code></pre>
<p>打开配置文件，找到下面几个参数：</p>
<pre><code>RSAAuthentication yes
PubkeyAuthentication yes
# yes 代表开启密匙登陆
</code></pre>
<p>一般默认都是<code>yes</code>开启的，如果不是，那就改为<code>yes</code>。</p>
<p>然后重启SSH：</p>
<pre><code>/etc/init.d/ssh restart# 如果这个提示没有找到服务，那么试试 /etc/init.d/sshd restart
# CentOS7 则使用：systemctl restart sshd
</code></pre>
<h3 id="关闭密码登陆方式">关闭密码登陆方式</h3>
<pre><code>vi /etc/ssh/sshd_config 
# 默认这个参数选项就是 no，如果不是则改为 no，如果前面有 注释符# 那么就去掉 #
PasswordAuthentication no
</code></pre>
<p>最后重启SSH：</p>
<pre><code>/etc/init.d/ssh restart
# 如果这个提示没有找到服务，那么试试 /etc/init.d/sshd restart
</code></pre>
<hr>
<h3 id="提示">提示</h3>
<p>上面是有公钥的情况下的操作，如果需要配置密钥对就先进行下面的操作</p>
<p>首先确保你的系统安装了 openssl</p>
<pre><code>openssl -V

# 正常情况下会返回一大串内容，如果提示 -bash: openssl: command not found 则代表未安装，用下面的命令安装：
# CentOS 系统：
yum install openssl -y 

# Debian/Ubuntu 系统
apt-get install openssl -y
</code></pre>
<h3 id="生成密匙对">生成密匙对</h3>
<p>我们执行下面这个命令，就会开始生成 ssh 密匙对(私匙+公匙)，根据下面提示来生成。</p>
<pre><code>ssh-keygen
</code></pre>
<pre><code>Generating public/private rsa key pair. 

Enter file in which to save the key (/root/.ssh/id_rsa):
# 输入要保存的密匙文件位置，直接回车 默认即可

Created directory '/root/.ssh'.

Enter passphrase (empty for no passphrase):
# 输入密匙的密码，可直接回车留空，也可以输入密码来进一步增强安全性(密匙+密码双重保险)
Enter same passphrase again:
# 重复输入一次密匙的密码 

Your identification has been saved in /root/.ssh/id_rsa.
# 你的私匙位置 /root/.ssh/id_rsa
Your public key has been saved in /root/.ssh/id_rsa.pub.
# 你的公匙位置 /root/.ssh/id_rsa.pub 

The key fingerprint is:
7c:25:bd:54:f5:fc:60:c0:86:c1:a0:32:7d:8a:80:c4 root@debian
The key's randomart image is:
+--[ RSA 2048]----+
|        .o.+..o..|
| o   . .  o o+ o.|
|. E o . .  .o + o|
| .   + +   o o o.|
|    . . S .   . .|
|         .       |
|        .        |
|                 |
|                 |
+-----------------+
</code></pre>
<h2 id=""></h2>
<h3 id="私钥取回本地">私钥取回本地</h3>
<pre><code>cat /root/.ssh/id_rsa
# 如果私匙生成位置不一样，自己改
</code></pre>
<p>首先我们读取<code>id_rsa</code>密匙文件，然后屏幕上会输出一大串的密匙，我们在本地电脑上面新建一个文本文件，并把屏幕上面的密匙复制出来写入文件内，文件取名为<code>id_rsa</code>（这个名称随意，<strong>但这个密匙文件一定要保存好！</strong>）。</p>
<pre><code># 密匙文件就像这样 

-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,EA47822BC49A9E56338A99D07084DA38XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
...
...
-----END RSA PRIVATE KEY-----
</code></pre>
<hr>
<p>本文参考自<br>
<a href="https://doubibackup.com/xq4-65xu.html">Linux 修改默认SSH端口 22，避免被暴力破解密码</a><br>
<a href="https://doubibackup.com/gqnmhax9-2.html">Linux 更换密码登陆方式 为使用 Key密匙安全登陆，避免被暴力破解密码</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文人怼人--鲁迅专栏]]></title>
        <id>https://Gunpowder-pixel.github.io/post/Z1Rbd8uw2/</id>
        <link href="https://Gunpowder-pixel.github.io/post/Z1Rbd8uw2/">
        </link>
        <updated>2020-04-26T05:43:39.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>浪费别人的时间就等于谋财害命。——《鲁迅全集》</p>
</li>
<li>
<p>当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。——《野草·题辞》</p>
</li>
<li>
<p>做了人类想成仙，生在地上想上天。——《新青年》1919.5</p>
</li>
<li>
<p>其实地上本没有路，走的人多了，便成了路。——《故乡》</p>
</li>
<li>
<p>譬如厨子做菜，有人品评他坏，他固不应该将厨刀铁釜交给批评者，说道你试来做一碗好的看。——鲁迅《对批评家的希望》</p>
</li>
<li>
<p>小的时候不把他当人，大了以后也做不了人。——《战士终是战士》</p>
</li>
<li>
<p>我所佩服诸公的只有一点，是这种东西居然也会发表分勇气。——《估学衡》</p>
</li>
<li>
<p>哀其不幸。怒其不争。——《孔乙己》</p>
</li>
<li>
<p>损着别人的牙眼，却发对报复，主张宽容的人，万勿和他接近。——《死》</p>
</li>
<li>
<p>猛兽总是独行牛羊才成群结队。——《鲁迅杂文精选》</p>
</li>
<li>
<p>从来如此，便对么。——《狂人日记》</p>
</li>
<li>
<p>社会上崇敬名人，于是以为名人说的话就是名言，却忘记了他之前得名是哪一种学问或事业。——《名人和名言》</p>
</li>
<li>
<p>无刺的蔷薇是没有的，然而没有蔷薇的刺却很多。——《无花的蔷薇》</p>
</li>
<li>
<p>父母对于子女，应该是健全的产生，尽力的教育，完全的解放。——《我们现在怎样做父亲》</p>
</li>
<li>
<p>面具带久了就会长到脸上，再想揭下来，除非伤棵筋动骨扒皮。——《鲁迅日记》</p>
</li>
<li>
<p>我家门前有两棵树，一是枣树，另一棵也是枣树。——《野草·秋夜》</p>
</li>
<li>
<p>友谊是两颗心真诚相待，而不是一颗心对另一颗心的敲打。——《鲁迅杂文选》</p>
</li>
<li>
<p>走自己的路，让别人去说。——《少年闰土》</p>
</li>
<li>
<p>我自己总觉得我的灵魂有毒。——《致李秉中》1925.5.8</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文人怼人]]></title>
        <id>https://Gunpowder-pixel.github.io/post/mwOd-yV6m/</id>
        <link href="https://Gunpowder-pixel.github.io/post/mwOd-yV6m/">
        </link>
        <updated>2020-04-26T05:26:10.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>做了人类想成仙，生在地上要上天。--鲁迅</p>
</li>
<li>
<p>有的人的脸，丑得像一桩冤案。--木心</p>
</li>
<li>
<p>你不讨厌，可是全无用处。--钱钟书</p>
</li>
<li>
<p>我何必想这些屁事，这根本不该是我的事。 --王小波</p>
</li>
<li>
<p>初见你这张吞象的巨口，我曾经幻想其中的深广。  不幸你后来每次张嘴，总让人直窥你的肚肠。</p>
<p>既无黑墨汁，也无蓝墨水，你患的原来是营养不良。    而你偏偏爱随地吐痰，以表示你的慷慨大量。<br>
--余光中</p>
</li>
<li>
<p>整天考，不是你考，就是我考，考他娘的什么东西。--季羡林</p>
</li>
<li>
<p>栀子花粗粗大大，又香的掸都掸不开，于是文人不取，品格不高。</p>
<p>栀子花说:去你妈的，我就是要这样香，香的痛痛快快，你们他妈的管得着吗？--汪曾祺</p>
</li>
<li>
<p>尽我最大的力量，别的就管他娘。--张爱玲</p>
</li>
<li>
<p>人老就罢了，何苦成精？--梁实秋</p>
</li>
<li>
<p>小的时候，不把他当人，大了以后也做不了人。--鲁迅</p>
</li>
<li>
<p>不自知的东西，照了镜子也没有用。--钱钟书</p>
</li>
<li>
<p>为什么你坐在那儿，看上去就像一个没写地址的信封？--马克·吐温</p>
</li>
<li>
<p>那张脸，就像十九世纪没卖出去，二十世纪又砸在手里的赔钱货。--夏目漱石</p>
</li>
<li>
<p>我想啐你，又怕玷污了我的唾沫。--莎士比亚</p>
</li>
<li>
<p>他们能够这么自信只是因为愚蠢。--卡夫卡</p>
</li>
<li>
<p>对于丑人，细看是一种残忍。--钱钟书</p>
</li>
<li>
<p>我知道，除了不漂亮，她什么都像一只孔雀。--王尔德</p>
</li>
<li>
<p>如果春风总是吹拂这么一张平淡无奇的脸，想来那春风也会觉得很无聊吧。--夏目漱石</p>
</li>
<li>
<p>某人说他不装，从来没装过，你赶紧上去记住他长什么样，你见到不要脸本人了。--王朔</p>
</li>
<li>
<p>他皱起额头，噘着通红的嘴巴。这让我想到一只不安的荷兰猪。</p>
<p>大部分人长得真是丑啊！可惜他们也不知道该待人随和一点，也好补救一下。--毛姆</p>
</li>
<li>
<p>你们二位在我的心上拉了屎。--陀思妥耶夫斯基</p>
</li>
<li>
<p>猪是否能快乐的像人，我们不知道；但是人容易满足的像猪，我们是常看见的。--钱钟书</p>
</li>
<li>
<p>如果你写不出，你就不该写，为什么非要为此呼天抢地的？</p>
<p>回家去吧。找一份工作。把自己吊死算了。可就是别再谈写作了。你根本就不会写。--海明威</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ServerStatus-Hotaru 云探针]]></title>
        <id>https://Gunpowder-pixel.github.io/post/1OvUmBhAg/</id>
        <link href="https://Gunpowder-pixel.github.io/post/1OvUmBhAg/">
        </link>
        <updated>2020-04-25T09:51:48.000Z</updated>
        <content type="html"><![CDATA[<p>教程就是从可乐那搬运过来的，我就是搬运社社长！<a href="https://www.cokemine.com/serverstatus-hotaru.html">可乐博客地址</a></p>
<p>项目地址：<a href="https://github.com/CokeMine/ServerStatus-Hotaru">ServerStatus-Hotaru</a></p>
<p>脚本来自<a href="https://www.aptx.xin/serverstatus-hotaru.html">APTX</a></p>
<hr>
<h2 id="服务端">服务端</h2>
<p>安装</p>
<pre><code>wget https://raw.githubusercontent.com/CokeMine/ServerStatus-Hotaru/master/status.sh
bash status.sh s
</code></pre>
<h2 id="客户端">客户端</h2>
<p>安装</p>
<pre><code>bash status.sh c
</code></pre>
<p>配置文件路径：<code>/usr/local/ServerStatus/server/config.json</code></p>
<p>监控本机就IP就填 127.0.0.1，有IPv6就是 ::1</p>
<p>服务端更新了数据需重启服务端</p>
<p>服务端安装时可以不用自动配置candy，有宝塔直接把网站目录指向 <code>/usr/local/ServerStatus/web</code> 即可</p>
<h2 id="相关开源项目">相关开源项目：</h2>
<ul>
<li>ServerStatus-Toyo：<a href="https://github.com/ToyoDAdoubiBackup/ServerStatus-Toyo">https://github.com/ToyoDAdoubiBackup/ServerStatus-Toyo</a></li>
<li>ServerStatus：<a href="https://github.com/BotoX/ServerStatus">https://github.com/BotoX/ServerStatus</a></li>
<li>mojeda's ServerStatus: <a href="https://github.com/mojeda/ServerStatus">https://github.com/mojeda/ServerStatus</a></li>
<li>BlueVM's project: <a href="http://www.lowendtalk.com/discussion/comment/169690#Comment_169690">http://www.lowendtalk.com/discussion/comment/169690#Comment_169690</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[脚本 测试你到数据中心的速度]]></title>
        <id>https://Gunpowder-pixel.github.io/post/sxAtIE7wY/</id>
        <link href="https://Gunpowder-pixel.github.io/post/sxAtIE7wY/">
        </link>
        <updated>2020-04-25T03:15:14.000Z</updated>
        <content type="html"><![CDATA[<p>通过duang知道了这个有趣的项目，可以测试你到各个IDC之间的速度，节省时间</p>
<p>Github:<a href="https://github.com/Spedoske/DataCenterSpeedtest-cli">DataCenterSpeedtest-cli</a></p>
<p>一般来说是在本机运行测速，当然 也可以在中转机上运行测速</p>
<h2 id="先安装python3请使用python-36或以下版本37以上无法测试https节点的链接和pip3">先安装python3(请使用python 3.6或以下版本，3.7以上无法测试https节点的链接)和pip3</h2>
<p>CentOS</p>
<pre><code>yum -y install python3
yum -y install python3-pip
</code></pre>
<p>Debian/Ubuntu</p>
<pre><code>sudo apt-get install python3
sudo apt-get install python3-pip
</code></pre>
<p>Windows请至python官网安装python3 (请使用python 3.6)</p>
<p>注意：Windows用户请将指令python3替换为python，pip3替换为pip。</p>
<h2 id="安装python包">安装python包</h2>
<p>本项目依赖requests、prettytable、eventlet包，需输入:</p>
<pre><code>pip3 install requests prettytable eventlet
</code></pre>
<p>来安装python包</p>
<h2 id="macos用户如遇print错误请在mainpy开头添加如下代码">MacOS用户如遇print错误，请在main.py开头添加如下代码:</h2>
<pre><code>import sys
import codecs
sys.stdout = codecs.getwriter(&quot;utf-8&quot;)(sys.stdout.detach())
</code></pre>
<h2 id="下载项目文件">下载项目文件</h2>
<p>Windows用户可以直接下载本项目的压缩包并解压. 为了安装并使用此项目，您需要下载下载本项目的文件。您可使用git下载项目文件并进入项目文件夹：</p>
<pre><code>git clone https://github.com/Spedoske/DataCenterSpeedtest-cli.git
cd DataCenterSpeedtest-cli
</code></pre>
<p>执行：</p>
<pre><code>python3 main.py --list
</code></pre>
<p>如果出现类似于下图的表格，恭喜您安装成功.</p>
<table>
<thead>
<tr>
<th>服务商</th>
<th>节点位置</th>
<th>节点编号</th>
</tr>
</thead>
<tbody>
<tr>
<td>Amazon Web Services</td>
<td>美国 弗吉尼亚州 阿什本</td>
<td>0</td>
</tr>
<tr>
<td>Amazon Web Services</td>
<td>美国 俄亥俄州 都柏林</td>
<td>1</td>
</tr>
<tr>
<td>Amazon Web Services</td>
<td>美国 俄亥俄州 都柏林</td>
<td>2</td>
</tr>
<tr>
<td>Amazon Web Services</td>
<td>美国 加利福尼亚州 旧金山</td>
<td>3</td>
</tr>
<tr>
<td>Amazon Web Services</td>
<td>美国 俄勒冈州 波特兰</td>
<td>4</td>
</tr>
<tr>
<td>Amazon Web Services</td>
<td>瑞典 斯德哥尔摩省 斯德哥尔摩</td>
<td>5</td>
</tr>
</tbody>
</table>
<hr>
<p>几个简单的命令<br>
<strong><code>--search</code></strong><br>
允许筛选节点</p>
<p><strong><code>--list</code></strong><br>
显示经过筛选后的节点<br>
例如：</p>
<pre><code>python3 main.py --search 日本 --list
</code></pre>
<table>
<thead>
<tr>
<th>服务商</th>
<th>节点位置</th>
<th>节点编号</th>
</tr>
</thead>
<tbody>
<tr>
<td>Amazon Web Services</td>
<td>日本 东京都 东京</td>
<td>13</td>
</tr>
<tr>
<td>Google Cloud Platform</td>
<td>日本 东京都 东京</td>
<td>8</td>
</tr>
<tr>
<td>Google Cloud Platform</td>
<td>日本 大阪府 大阪</td>
<td>9</td>
</tr>
<tr>
<td>Linode</td>
<td>日本 东京都 品川区</td>
<td>7</td>
</tr>
<tr>
<td>Vultr</td>
<td>日本 东京都 东京</td>
<td>14</td>
</tr>
</tbody>
</table>
<hr>
<p><strong><code>--speedtest</code></strong><br>
允许您对筛选后的节点进行测速<br>
例如：</p>
<pre><code>python3 main.py --search 日本 --speedtest --list
</code></pre>
<table>
<thead>
<tr>
<th>服务商</th>
<th>节点</th>
<th>速度</th>
<th>节点链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>Amazon Web Services</td>
<td>日本 东京都 东京</td>
<td>13.36 MB/s</td>
<td>ap-northeast-1-ec2.cloudharmony.net</td>
</tr>
<tr>
<td>Google Cloud Platform</td>
<td>日本 东京都 东京</td>
<td>5.82 MB/s</td>
<td>asia-northeast1-gce.cloudharmony.net</td>
</tr>
<tr>
<td>Google Cloud Platform</td>
<td>日本 大阪府 大阪</td>
<td>5.53 MB/s</td>
<td>asia-northeast2-gce.cloudharmony.net</td>
</tr>
<tr>
<td>Vultr</td>
<td>日本 东京都 东京</td>
<td>226.19 KB/s</td>
<td>HND-JP-ping.vultr.com</td>
</tr>
<tr>
<td>Linode</td>
<td>日本 东京都 品川区</td>
<td>21.28 KB/s</td>
<td>speedtest.tokyo2.linode.com</td>
</tr>
</tbody>
</table>
<p>更多详细命令请观看 DataCenterSpeedtest-cli <a href="https://github.com/Spedoske/DataCenterSpeedtest-cli/wiki"><strong>WIKI</strong></a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hostloc小技巧]]></title>
        <id>https://Gunpowder-pixel.github.io/post/q56Otyp3n/</id>
        <link href="https://Gunpowder-pixel.github.io/post/q56Otyp3n/">
        </link>
        <updated>2020-04-24T04:38:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="超链接">超链接</h2>
<p><code>[url][url][url]链接[/url][/url][/url]</code><br>
<code>[url=[url][url]链接[/url][/url]]链接名[/url]</code></p>
<h2 id="超链接代码">超链接代码</h2>
<ul>
<li>文字超链接:<code>[url=链接地址]链接显示的文字[/url]</code></li>
<li>图片超链接:<code>[url=链接地址][img]图片地址[/img][/url]</code></li>
</ul>
<h2 id="图片代码">图片代码</h2>
<ul>
<li>加图片:<code>[img]图片地址[/img]</code></li>
<li>加图片:<code>[img]图片地址[/img]</code></li>
</ul>
<h2 id="文字样式代码">文字样式代码</h2>
<ul>
<li>文字加颜色:<code>[color=red]文字[/color]（可以替换blue/green等其他颜色）</code></li>
<li>文字加粗:<code>文字</code></li>
<li>文字斜体:<code>[i]文字[/i]</code></li>
<li>文字下划线:<code>文字</code></li>
<li>文字删除线:<code>文字</code></li>
<li>字体加大:<code>文字</code></li>
<li>文字飞行:<code>[fly]文字[/fly]</code></li>
<li>文字闪烁:<code>[light]文字[/light]</code></li>
<li>文字大小:<code>[size=4]文字[/size]（数字自己调节）</code></li>
<li>文字移动:<code>文字</code></li>
<li>文字字体:<code>[font=仿宋]文字[/font]</code></li>
<li>文字居中:<code>[align=center]文字[/align]</code></li>
<li>文字加颜色:<code>[color=red]文字[/color]（可以替换blue/green等其他颜色）</code></li>
<li>文字加粗:<code>文字</code></li>
<li>文字斜体:<code>[i]文字[/i]</code></li>
<li>文字下划线:<code>文字</code></li>
<li>文字删除线:<code>文字</code></li>
<li>字体加大:<code>文字</code></li>
<li>文字飞行:<code>[fly]文字[/fly]</code></li>
<li>文字闪烁:<code>[light]文字[/light]</code></li>
<li>文字大小:<code>[size=4]文字[/size]（数字自己调节）</code></li>
<li>文字移动:<code>文字</code></li>
<li>文字字体:<code>[font=仿宋]文字[/font]</code></li>
<li>文字居中:<code>[align=center]文字[/align]</code></li>
</ul>
<h2 id="邮件代码">邮件代码</h2>
<ul>
<li>E-Mail链接:<code>[email]myname@mydomain.com[/email]</code></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自签名 Trojan 搭建]]></title>
        <id>https://Gunpowder-pixel.github.io/post/27K1NUr7b/</id>
        <link href="https://Gunpowder-pixel.github.io/post/27K1NUr7b/">
        </link>
        <updated>2020-04-23T11:40:22.000Z</updated>
        <summary type="html"><![CDATA[<p>四行代码搭建trojan</p>
]]></summary>
        <content type="html"><![CDATA[<p>四行代码搭建trojan</p>
<!-- more -->
<h1 id="服务端">服务端</h1>
<h2 id="前期准备">前期准备</h2>
<p>安装必要的软件</p>
<pre><code>apt-get install curl openssl nano 
</code></pre>
<h2 id="第一行生成自签名证书">第一行，生成自签名证书</h2>
<pre><code>openssl req -newkey rsa:2048 -nodes -keyout /etc/trojankey.pem -x509 -days 3650 -out /etc/trojancertificate.pem
</code></pre>
<p>运行过程中一直按回车就好<br>
<img src="https://i.loli.net/2020/04/04/48Qa5vqDkMyIf2n.png"><br>
通过上面一行命令，能够生成两个pem，将这两个pem写到trojan配置文件里面即可。</p>
<h2 id="第二行安装trojan">第二行，安装trojan</h2>
<pre><code>bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)&quot;
</code></pre>
<p>这行命令是下载trojan</p>
<h2 id="第三行修改trojan配置文件">第三行，修改trojan配置文件</h2>
<pre><code>nano /usr/local/etc/trojan/config.json
</code></pre>
<p>替换掉<code>cert</code>和<code>key</code>，密码随意<br>
<img src="https://i.loli.net/2020/04/04/jo7b8Btd3Dm5M9U.png"><br>
这时候，如果用低于1080的端口，那么就需要赋予trojan监听的能力。</p>
<p>赋予trojan监听443端口的能力</p>
<pre><code>setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/trojan
</code></pre>
<h2 id="第四行修改启动trojan">第四行，修改启动trojan</h2>
<pre><code>systemctl restart trojan
</code></pre>
<p>如果有必要，可以设置成开机自动启动trojan</p>
<pre><code>systemctl enable trojan
</code></pre>
<h1 id="服务端-2">服务端</h1>
<p>这里以 PC 为例，Android/iOS 可以找找相应的工具</p>
<p>同样从 GitHub Release 下载对应的文件，解压缩，把client.json-example拷贝出来<br>
我们只需要关注local_port、remote_addr、remote_port、password和ssl的几个字段</p>
<ul>
<li>local_port 本地监听的端口，我这里设置为了 11080，避免和本机的 Shadowsocks 冲突</li>
<li>remote_addr：申请的域名</li>
<li>remote_port：上面服务端配置的端口，一般来说就是 443</li>
<li>password：密码，要与服务端配置的密码列表中的一个相符
<ul>
<li>ssl：如果你使用的是自签名证书，那么verify要写 false，假如 common name 也是瞎写的，那么verify_hostname也要写 false；假如用的是真证书，那么就都 true 就可以了<br>
<img src="https://i.loli.net/2020/04/04/81BRUtEhkHPuNlj.png"></li>
</ul>
</li>
</ul>
<p><a href="http://blog.wdjsh169.ml/index.php/archives/143/">文章转载自奇葩秋，跳转链接</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PS简单修复皮肤泛油和泛光]]></title>
        <id>https://Gunpowder-pixel.github.io/post/4/</id>
        <link href="https://Gunpowder-pixel.github.io/post/4/">
        </link>
        <updated>2020-04-23T09:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>1.新建图层，在新建图层上用吸管工具吸取皮肤颜色，再使用画笔工具   模式：变暗    不透明度：10%-15%<br>
在图层上用画笔工具把泛光或斑点抹去</p>
<p>2.第1项完成后，再次新建图层，用相同的画笔给整张脸涂抹美白，完成后给该图层添加图层蒙版，使用黑色画笔<br>
在图层蒙版上把眼睛、眉毛、嘴巴等部位涂出来，画笔工具  模式：正常    不透明度：100%<br>
涂抹眉毛时可将画笔不透明度调至30%-40%</p>
<p>3.最后将图层的不透明度降低到30%-40%，以最小化肤色</p>
<p>完成</p>
<hr>
<p>另一种方法</p>
<ol>
<li>复制图层  CTRL+J</li>
<li>拷贝一个通道蓝</li>
<li>选择通道蓝   滤镜--其他--高反差保留 半径：20-30像素</li>
<li>图像--应用图像 强光 不透明度100% 重复3次</li>
<li>选中通道蓝 拷贝的选区  CTRL+左键</li>
<li>反向选区  CTRL+SHIFT+I</li>
<li>选中第一步复制的图层，添加一个曲线，打开黑白图层调整曲线</li>
<li>盖印曲线图层  CTRL+SHIFT+ALT+E</li>
<li>滤镜--杂色--减少杂色</li>
<li>上图层蒙版，把五官涂抹出来</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">减少杂色设置</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">强度：10</td>
</tr>
<tr>
<td style="text-align:center">保留细节：0</td>
</tr>
<tr>
<td style="text-align:center">减少杂色：100</td>
</tr>
<tr>
<td style="text-align:center">锐化细节：0</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[G-Core的机房测试IP]]></title>
        <id>https://Gunpowder-pixel.github.io/post/3/</id>
        <link href="https://Gunpowder-pixel.github.io/post/3/">
        </link>
        <updated>2020-04-23T08:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>荷兰（阿姆斯特丹）：92.38.186.2<br>
阿什本：92.223.83.2<br>
芝加哥：92.38.177.2<br>
迈阿密：92.223.66.3<br>
圣克拉拉：92.38.148.2<br>
莫斯科：92.223.103.3<br>
伯力（Khabarovsk）：92.223.80.3<br>
克拉斯诺亚尔斯克边疆区（Krasnoyarsk）：92.223.87.2<br>
叶卡捷琳堡（Yekaterinburg）：92.223.91.2<br>
卢森堡公国：92.223.88.2<br>
圣保罗：5.188.238.2<br>
首尔：92.223.73.2<br>
新加坡：92.223.86.2<br>
悉尼：146.185.236.2<br>
东京：5.188.71.3</p>
]]></content>
    </entry>
</feed>